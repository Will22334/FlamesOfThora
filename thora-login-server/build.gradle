/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
    id 'java-library'
    id 'eclipse'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

group 'com.thora.login'
archivesBaseName = 'thora-login-server'
version '0.1.0'

def version_log4j = '2.19.0'

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: version_log4j

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    //api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    //api 'com.google.guava:guava:30.1.1-jre'
	
	implementation project(':thora-api')
    
}

eclipse {
  project {
    name = 'thora-login-server'
    comment = 'Server that authenticates account credentials and then directs users to specific server instances.'
    
    
    natures = ['org.eclipse.jdt.core.javanature', 'org.eclipse.buildship.core.gradleprojectnature']

    buildCommand 'org.eclipse.jdt.core.javabuilder'
    buildCommand 'org.eclipse.buildship.core.gradleprojectbuilder'
    
  }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
